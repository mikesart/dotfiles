# https://github.com/ryanoasis/public-bash-scripts/blob/master/unix-color-codes.sh
# https://github.com/ryanoasis/public-bash-scripts/blob/master/unix-color-codes-not-escaped.sh

BLACK="\e[00;30m"
DARK_GRAY="\e[01;30m"
RED="\e[00;31m"
BRIGHT_RED="\e[01;31m"
GREEN="\e[00;32m"
BRIGHT_GREEN="\e[01;32m"
BROWN="\e[00;33m"
YELLOW="\e[01;33m"
BLUE="\e[00;34m"
BRIGHT_BLUE="\e[01;34m"
PURPLE="\e[00;35m"
LIGHT_PURPLE="\e[01;35m"
CYAN="\e[00;36m"
BRIGHT_CYAN="\e[01;36m"
LIGHT_GRAY="\e[00;37m"
WHITE="\e[01;37m"
ENDCOLOR="\e[m"

# Need to use octal escape "\001" instead of "\["
#   \001: Start non-visible characters
#   \002: End
#   \[ and \] are bash-specific (translated to \001 in y.tab.c ~ line 7640)
# http://mywiki.wooledge.org/BashFAQ/053
# https://wiki.archlinux.org/index.php/Bash/Prompt_customization
# https://superuser.com/questions/301353/escape-non-printing-characters-in-a-function-for-a-bash-prompt

# Reset
Color_Off="\001\033[0m\002"       # Text Reset

# Regular Colors
Black="\001\033[0;30m\002"        # Black
Red="\001\033[0;31m\002"          # Red
Green="\001\033[0;32m\002"        # Green
Yellow="\001\033[0;33m\002"       # Yellow
Blue="\001\033[0;34m\002"         # Blue
Purple="\001\033[0;35m\002"       # Purple
Cyan="\001\033[0;36m\002"         # Cyan
White="\001\033[0;37m\002"        # White

# Bold
BBlack="\001\033[1;30m\002"       # Black
BRed="\001\033[1;31m\002"         # Red
BGreen="\001\033[1;32m\002"       # Green
BYellow="\001\033[1;33m\002"      # Yellow
BBlue="\001\033[1;34m\002"        # Blue
BPurple="\001\033[1;35m\002"      # Purple
BCyan="\001\033[1;36m\002"        # Cyan
BWhite="\001\033[1;37m\002"       # White

# Underline
UBlack="\001\033[4;30m\002"       # Black
URed="\001\033[4;31m\002"         # Red
UGreen="\001\033[4;32m\002"       # Green
UYellow="\001\033[4;33m\002"      # Yellow
UBlue="\001\033[4;34m\002"        # Blue
UPurple="\001\033[4;35m\002"      # Purple
UCyan="\001\033[4;36m\002"        # Cyan
UWhite="\001\033[4;37m\002"       # White

# Background
On_Black="\001\033[40m\002"       # Black
On_Red="\001\033[41m\002"         # Red
On_Green="\001\033[42m\002"       # Green
On_Yellow="\001\033[43m\002"      # Yellow
On_Blue="\001\033[44m\002"        # Blue
On_Purple="\001\033[45m\002"      # Purple
On_Cyan="\001\033[46m\002"        # Cyan
On_White="\001\033[47m\002"       # White

# High Intensty
IBlack="\001\033[0;90m\002"       # Black
IRed="\001\033[0;91m\002"         # Red
IGreen="\001\033[0;92m\002"       # Green
IYellow="\001\033[0;93m\002"      # Yellow
IBlue="\001\033[0;94m\002"        # Blue
IPurple="\001\033[0;95m\002"      # Purple
ICyan="\001\033[0;96m\002"        # Cyan
IWhite="\001\033[0;97m\002"       # White

# Bold High Intensty
BIBlack="\001\033[1;90m\002"      # Black
BIRed="\001\033[1;91m\002"        # Red
BIGreen="\001\033[1;92m\002"      # Green
BIYellow="\001\033[1;93m\002"     # Yellow
BIBlue="\001\033[1;94m\002"       # Blue
BIPurple="\001\033[1;95m\002"     # Purple
BICyan="\001\033[1;96m\002"       # Cyan
BIWhite="\001\033[1;97m\002"      # White

# High Intensty backgrounds
On_IBlack="\001\033[0;100m\002"   # Black
On_IRed="\001\033[0;101m\002"     # Red
On_IGreen="\001\033[0;102m\002"   # Green
On_IYellow="\001\033[0;103m\002"  # Yellow
On_IBlue="\001\033[0;104m\002"    # Blue
On_IPurple="\001\033[10;95m\002"  # Purple
On_ICyan="\001\033[0;106m\002"    # Cyan
On_IWhite="\001\033[0;107m\002"   # White

# Various variables you might want for your PS1 prompt instead
Time12h="\T"
Time12a="\@"
PathShort="\w"
PathFull="\W"
NewLine="\n"
Jobs="\j"

# +-----------------+
# |color  | fg | bg |
# +-----------------+
# |black  | 30 | 40 |
# |red    | 30 | 40 |
# |green  | 32 | 42 |
# |yellow | 33 | 43 |
# |blue   | 34 | 44 |
# |magenta| 35 | 45 |
# |cyan   | 36 | 46 |
# |white  | 37 | 47 |
# +-----------------+
#
# tell how many colors your terminal supports:
#   tput colors
#
# Bump up to 256 colors:
#     export TERM=xterm-256color
#
# bash prompt howto: ANSI Escape Sequences: Colours and Cursor Movement
#   http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html
color_terminal()
{
    echo;
    echo "More info: http://misc.flogisoft.com/bash/tip_colors_and_formatting"
    echo "           https://wiki.archlinux.org/index.php/Color_Bash_Prompt"
    echo;
    echo -e "$YELLOW --- Terminal Color Chart --- $ENDCOLOR"

    T='gYw'   # The test text

    echo -e "\n                 40m     41m     42m     43m     44m     45m     46m     47m";

    for FGs in '    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m'    '1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m'    '  36m' '1;36m' '  37m' '1;37m';
        do FG=${FGs// /}
        echo -en " $FGs \033[$FG  $T  "
        for BG in 40m 41m 42m 43m 44m 45m 46m 47m;
            do echo -en "$EINS \033[$FG\033[$BG  $T  \033[0m";
        done
        echo;
    done
    echo

    COLORS=(
      BLACK
      DARK_GRAY
      RED
      BRIGHT_RED
      GREEN
      BRIGHT_GREEN
      BROWN
      YELLOW
      BLUE
      BRIGHT_BLUE
      PURPLE
      LIGHT_PURPLE
      CYAN
      BRIGHT_CYAN
      LIGHT_GRAY
      WHITE
      ENDCOLOR
    )

    for i in "${COLORS[@]}"; do
        # ${!i} is indirect expansion
        printf "  %-12s: ${!i}%s${ENDCOLOR}\n" ${i} ${i}
    done
}

color_test()
{
    local i j c l b
    for i in {0..15}; do
        echo -ne "\e[38;5;${i}m ${i}\e[0m ";
    done
    echo
    echo
    for l in {0..1}; do
        for i in {0..5}; do
            for b in {0..2}; do
                for j in {0..5}; do
                    c=$((16+b*36+l*108+6*i+j))
                    printf "\e[38;5;%sm %3d\e[0m" $c $c;
                done
                echo -n "   "
            done
            echo
        done
        echo
    done
    for i in {232..256}; do
        printf "\e[38;5;%sm %3d\e[0m" $i $i;
    done
    echo
}

# Use like this: echo 'rainbox text foobar' | color_font yellow bold
color_font()
{
    gray="\033[0;37m"
    cyan="\033[0;36m"
    blue="\033[0;34m"
    green="\033[0;32m"
    yellow="\033[0;33m"
    red="\033[0;31m"
    purple="\033[0;35m"
    default="\033[m"
    color=\$${1:-default}
    # activate color passed as argument
    echo -ne "`eval echo ${color}`"
    case "$2" in
        'under') echo -ne "\e[4m" ;;
        'bold') echo -ne "\e[1m" ;;
        'dim') echo -ne "\e[2m" ;;
        'blink') echo -ne "\e[5m" ;;
        'rev') echo -ne "\e[7m" ;;
    esac
    cat
    echo -ne "${NORMAL}"
    tput sgr0
}

# http://unix.stackexchange.com/questions/124407/what-color-codes-can-i-use-in-my-ps1-prompt
color_grid()
{
    iter=16
    while [ $iter -lt 52 ]
    do
        second=$[$iter+36]
        third=$[$second+36]
        four=$[$third+36]
        five=$[$four+36]
        six=$[$five+36]
        seven=$[$six+36]
        if [ $seven -gt 250 ];then seven=$[$seven-251]; fi

        echo -en "\033[38;5;$(echo $iter)m█ "
        printf "%03d" $iter
        echo -en "   \033[38;5;$(echo $second)m█ "
        printf "%03d" $second
        echo -en "   \033[38;5;$(echo $third)m█ "
        printf "%03d" $third
        echo -en "   \033[38;5;$(echo $four)m█ "
        printf "%03d" $four
        echo -en "   \033[38;5;$(echo $five)m█ "
        printf "%03d" $five
        echo -en "   \033[38;5;$(echo $six)m█ "
        printf "%03d" $six
        echo -en "   \033[38;5;$(echo $seven)m█ "
        printf "%03d" $seven

        iter=$[$iter+1]
        printf '\r\n'
    done
}

